# Build a crimild-based application, linking it with Crimild libraries
#
# Arguments:
# - CRIMILD_APP_NAME: (Required) Name for the example project
# - CRIMILD_APP_SOURCE_DIRECTORIES: (Required) Base directory for sources
# - CRIMILD_APP_INCLUDE_DIRECTORIES: (Required) Base directory for includes

MESSAGE( "Configuring ${CRIMILD_APP_NAME} app" )

IF ( APPLE )
	# Enable C++11 features
	SET( CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++ -U__STRICT_ANSI__" )

	set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++0x")
	set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++")

	set(CMAKE_MACOSX_RPATH 1)
ELSE ( APPLE )
	SET( CMAKE_CXX_FLAGS "-std=c++11 -static-libgcc -static-libstdc++ -static -U__STRICT_ANSI__" )
ENDIF ( APPLE )

IF ( CRIMILD_ENABLE_TESTS )
	ENABLE_TESTING()
ENDIF ( CRIMILD_ENABLE_TESTS )

FOREACH( ITR ${CRIMILD_APP_SOURCE_DIRECTORIES} )
	FILE( GLOB_RECURSE TMP_FILES "${ITR}/*.hpp" )
	SET( CRIMILD_APP_HEADER_FILES ${CRIMILD_APP_HEADER_FILES} ${TMP_FILES} )

	FILE( GLOB_RECURSE TMP_FILES "${ITR}/*.cpp" )
	SET( CRIMILD_APP_SOURCE_FILES ${CRIMILD_APP_SOURCE_FILES} ${TMP_FILES} )
ENDFOREACH ( ITR )

SET( CRIMILD_APP_DEPENDENCIES 
	crimild_core	
	crimild_raytracing
)

SET( CRIMILD_APP_LINK_LIBRARIES 
	crimild_core
	crimild_raytracing
)

SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
	${CRIMILD_SOURCE_DIR}/core/src
	${CRIMILD_SOURCE_DIR}/raytracing/src
	${CRIMILD_APP_INCLUDE_DIRECTORIES}
) 

SET( CRIMILD_APP_LINK_DIRECTORIES 
	${CRIMILD_SOURCE_DIR}/lib
) 
	
IF ( CRIMILD_ENABLE_SCRIPTING )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_scripting 
	)
	
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_scripting 
	)
	
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/scripting/src
		 ${CRIMILD_SOURCE_DIR}/third-party/lua-5.2.3/src
	)
ENDIF ()

IF ( CRIMILD_ENABLE_AL )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_al )
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_al )
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/al/src )
ENDIF ( CRIMILD_ENABLE_AL )

IF ( CRIMILD_ENABLE_PHYSICS )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_physics )
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_physics )
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/physics/src
		 ${CRIMILD_SOURCE_DIR}/third-party/bullet-2.82-r2704/src )
	SET( CRIMILD_APP_LINK_DIRECTORIES 
		 ${CRIMILD_APP_LINK_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/third-party/bullet-2.82-r2704/lib )
ENDIF ( CRIMILD_ENABLE_PHYSICS )

IF ( CRIMILD_ENABLE_IMPORT )
	SET( CRIMILD_APP_DEPENDENCIES 
		${CRIMILD_APP_DEPENDENCIES} 
		crimild_import )
	SET( CRIMILD_APP_LINK_LIBRARIES 
		${CRIMILD_APP_LINK_LIBRARIES} 
		crimild_import )
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		${CRIMILD_APP_INCLUDE_DIRECTORIES}
		${CRIMILD_SOURCE_DIR}/import/src
		${Assimp_SOURCE_DIR}/include
  		${Assimp_SOURCE_DIR}/code )
	SET( CRIMILD_APP_LINK_DIRECTORIES 
		${CRIMILD_APP_LINK_DIRECTORIES} 
  		${Assimp_BINARY_DIR} )
ENDIF ( CRIMILD_ENABLE_IMPORT )

IF ( CRIMILD_ENABLE_GLFW )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_opengl
		 crimild_glfw
		 glfw 
	)
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_opengl
		 crimild_glfw
		 glfw 
	)
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/opengl/src
		 ${CRIMILD_SOURCE_DIR}/glfw/src
		 ${CRIMILD_SOURCE_DIR}/third-party/glfw/include
		 ${CRIMILD_SOURCE_DIR}/third-party/glew/include
 	)
	SET( CRIMILD_APP_LINK_DIRECTORIES 
		 ${CRIMILD_APP_LINK_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/third-party/glfw/src
	)
ENDIF ()

IF ( CRIMILD_ENABLE_SFML )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_sfml
		 sfml-audio
		 sfml-graphics
		 sfml-network
		 sfml-system
		 sfml-window
	)
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_sfml
		 sfml-audio
		 sfml-graphics
		 sfml-network
		 sfml-system
		 sfml-window
	)
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/sfml/src
		 ${CRIMILD_SOURCE_DIR}/third-party/sfml/include
 	)
	SET( CRIMILD_APP_LINK_DIRECTORIES 
		 ${CRIMILD_APP_LINK_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/third-party/sfml/lib
	)
ENDIF ()

INCLUDE_DIRECTORIES( ${CRIMILD_APP_INCLUDE_DIRECTORIES} )

LINK_DIRECTORIES( ${CRIMILD_APP_LINK_DIRECTORIES} )

IF ( APPLE )
	SET( CRIMILD_APP_LINK_LIBRARIES 
		${CRIMILD_APP_LINK_LIBRARIES} 
		"-framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo" )
ENDIF ( APPLE )

IF ( WIN32 ) 
	SET( CRIMILD_APP_LINK_LIBRARIES ${CRIMILD_APP_LINK_LIBRARIES} opengl32 glu32 winmm )
ENDIF ( WIN32 )

ADD_EXECUTABLE( ${CRIMILD_APP_NAME}
	${CRIMILD_APP_SOURCE_FILES}
	${CRIMILD_APP_HEADER_FILES} )

IF ( CRIMILD_BUNDLE_APPS )
	IF ( APPLE )
		SET_TARGET_PROPERTIES( ${CRIMILD_APP_NAME} PROPERTIES
  			MACOSX_BUNDLE TRUE
  			MACOSX_FRAMEWORK_IDENTIFIER com.crimild.${CRIMILD_APP_NAME}
		)

		MESSAGE( "Configuring ${PROJECT_SOURCE_DIR}/assets" )

   		EXEC_PROGRAM( "mkdir -p ${${CRIMILD_APP_NAME}_BINARY_DIR}/${CRIMILD_APP_NAME}.app/Contents/Resources" )
   		EXEC_PROGRAM( "cp -r ${PROJECT_SOURCE_DIR}/assets ${${CRIMILD_APP_NAME}_BINARY_DIR}/${CRIMILD_APP_NAME}.app/Contents/Resources" )
	ENDIF ( APPLE )

	IF ( WIN32 )
		SET_TARGET_PROPERTIES( ${CRIMILD_APP_NAME} PROPERTIES
  			WIN32 TRUE
		)
	ENDIF ( WIN32 )
ENDIF( CRIMILD_BUNDLE_APPS )

TARGET_LINK_LIBRARIES( ${CRIMILD_APP_NAME} ${CRIMILD_APP_LINK_LIBRARIES} )

ADD_DEPENDENCIES( ${CRIMILD_APP_NAME} ${CRIMILD_APP_DEPENDENCIES} )
